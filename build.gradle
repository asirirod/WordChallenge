plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.joseph'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compile 'org.junit.jupiter:junit-jupiter-api:5.4.0'
	compile 'org.junit.jupiter:junit-jupiter-params:5.4.0'
	compile 'org.junit.jupiter:junit-jupiter-engine:5.4.0'

	compile 'org.junit.platform:junit-platform-launcher:1.4.0'
	compile 'org.junit.platform:junit-platform-commons:1.4.0'
	compile 'org.junit.platform:junit-platform-suite-api:1.4.0'
	compile 'org.junit.platform:junit-platform-runner:1.4.0'

	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.8'

	compile 'commons-io:commons-io:2.6'
}


task runPositiveTests(type: WordTest){
	useJUnitPlatform {
		excludeTags 'Negative'
		includeEngines 'junit-jupiter'
	}

	initializeTests()
}

task runNegativeTests(type: WordTest){
	useJUnitPlatform {
		includeTags 'Negative'
		includeEngines 'junit-jupiter'
	}

	initializeTests()
}

class WordTest extends Test {
	@TaskAction
	def initializeTests() {
		testLogging {
			events 'PASSED', 'FAILED', 'SKIPPED'
		}

		beforeTest {
			descriptor -> logger.lifecycle("Running test: " + descriptor)
		}

		testLogging.showStandardStreams = true
	}
}